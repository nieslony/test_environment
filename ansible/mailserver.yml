- name: Mailserver
  hosts: all
  become: true

  vars:
    certs:
      postfix: /etc/pki/postfix
      cyrus: /etc/pki/imap

    krb5_services:
      smtp: { path: /etc/postfix/krb5.keytab, owner: postfix }

    packages:
      - python3-urllib-gssapi
      - mailx
      - postfix

    postfix_conf:
      mydomain: "nieslony.lab"
      myhostname: "{{ ansible_fqdn }}"
      myorign: "$mydomain"
      mydestination: "$mydomain $myhostname"
      mynetworks: "192.168.110,0/24, 192.168.120.0/24"
      inet_interfaces: "all"
      smtpd_tls_cert_file: "{{ certs['postfix']  }}/{{ ansible_fqdn }}.crt"
      smtpd_tls_key_file: "{{ certs['postfix'] }}/{{ ansible_fqdn }}.key"
      smtpd_tls_CAfile: "/etc/ipa/ca.crt"
      smtpd_recipient_restrictions: >
        sleep 1,
        reject_unauth_pipelining,
        reject_rbl_client zen.spamhaus.org,
        reject_non_fqdn_recipient,
        reject_invalid_helo_hostname,
        reject_unknown_recipient_domain,
        reject_unauth_destination,
        permit
    smtpd_sender_restrictions: >
        reject_sender_login_mismatch,
        permit_sasl_authenticated,
    permit

  tasks:
    - name: Enable EPEL
      dnf:
        name:
          - epel-release.noarch
          - epel-next-release.noarch
        state: latest

    - name: Install packages
      dnf:
        name: "{{ packages }}"
        state: latest

    - name: Create Certificate Folders
      file:
        name: "{{ item.value }}"
        state: directory
      loop: "{{ certs | dict2items }}"

    - name: Create Certificates
      command:
        cmd: |
          ipa-getcert request
            --keyfile {{ item.value }}/{{ ansible_fqdn }}.key
            --certfile {{ item.value }}/{{ ansible_fqdn }}.crt
            --key-owner {{ item.key }}
            --cert-owner {{ item.key }}
        creates: "{{ item.value }}/{{ ansible_fqdn }}.crt"
      environment:
        KRB5_CLIENT_KEYTAB: /etc/krb5.keytab
      loop: "{{ certs | dict2items }}"

    - name: Create services
      ipa_service:
        name: "{{ item.key}}/{{ ansible_fqdn }}"
        ipa_host: ipa01.linux.lab
      environment:
        KRB5_CLIENT_KTNAME: /etc/krb5.keytab
        https_proxy: ""
        http_proxy: ""
      loop: "{{ krb5_services | dict2items }}"

    - name: Get keytabs
      shell:
        cmd: |
          kinit -k
          ipa-getkeytab -p {{ item.key }}/{{ ansible_fqdn }} -k {{ item.value["path"] }}
          kdestroy
        creates: "{{ item.value['path'] }}"
      loop:  "{{ krb5_services | dict2items }}"

    - name: Change ownership of keytabs
      file:
        path: "{{ item.value['path'] }}"
        owner: "{{ item.value['owner'] }}"
      loop: "{{ krb5_services | dict2items }}"

    - name: Make checksum of old main.cf
      command:
        cmd: "sha256sum /etc/postfix/main.cf"
      register: checksum_main_cf_old
      changed_when: no

    - name: Configure postfix
      command:
        cmd: "postconf -e '{{ item.key }}={{ item.value }}'"
      loop: "{{ postfix_conf | dict2items }}"
      changed_when: no

    - name: Make checksum of old main.cf
      command:
        cmd: "sha256sum /etc/postfix/main.cf"
      register: checksum_main_cf_new
      changed_when: checksum_main_cf_old.stdout != checksum_main_cf_old.stdout
      notify: restart_postfix

    - name: Start postfix
      service:
        name: postfix
        state: started
        enabled: yes

    - name: Start firewalld
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: "Open ports in firewall"
      firewalld:
        service: smtp
        permanent: yes
        immediate: yes
        state: enabled

  handlers:
    - name: Restart postfix
      service:
        name: postfix
        state: restarted
      listen: restart_postfix
