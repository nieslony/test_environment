- name: Setup FreeIpa
  hosts: all
  become: true

  vars_files:
    - "../config.yml"
    - "vars/ipa-config.yml"

  vars:
    ipa_server_packages:
        - "ipa-server"
        - "ipa-server-dns"
        - "ipa-server-trust-ad"

  collections:
    - freeipa.ansible_freeipa

  environment:
    LC_ALL: "C.UTF-8"

  pre_tasks:
    - name: "Install Updates"
      dnf:
        name: "*"
        state: latest

    - name: "Install IPA packages: {{ ipa_server_packages | join(', ') }}"
      dnf:
        name: "{{ ipa_server_packages }}"
        state: latest

    - name: "Remove {{ ansible_fqdn }} from /etc/hosts"
      lineinfile:
        path: /etc/hosts
        regexp: "^127.*{{ ansible_fqdn }}"
        state: absent

    - name: "Add local IP to /etc/hosts"
      lineinfile:
        path: /etc/hosts
        regexp: "^192.168.120.20\\s*{{ ansible_fqdn }}"
        line: "192.168.120.20 {{ ansible_fqdn }}"

  roles:
    - freeipa.ansible_freeipa.ipaserver

  post_tasks:
    - name: "Activate firewall"
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: Configure firewall
      firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - freeipa-4
        - freeipa-trust
        - dns

    - name: Create MX record
      ipadnsrecord:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "@"
        record_type: MX
        record_value: "10 mail"
        zone_name: linux.lab

    - name: IPA server config
      ipaconfig:
        ipaadmin_password: "{{ ipaadmin_password }}"
        defaultshell: /bin/bash
      environment:
        http_proxy: ""
        https_proxy: ""

    - name: "Create Users"
      ipauser:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ item.name }}"
        givenname: "{{ item.givenname }}"
        sn: "{{ item.sn }}"
        email:
          - "{{ item.email }}"
        update_password: on_create
        password: UserPassword.1
      with_items:
        - { name: mustermann, givenname: "Max", sn: "Mustermann", email: "max.mustermann@{{ maildomain }}" }
        - { name: rossi, givenname: "Mario", sn: "Rossi", email: "mario.rossi@{{ maildomain }}" }
        - { name: doe, givenname: "John", sn: "Doe", email: "john.doe@{{ maildomain }}" }

    - name: "Upload fotos"
      copy:
        src: "files/{{ item }}"
        dest: /tmp
      with_items:
        - rossi.jpeg
        - mustermann.jpeg
        - doe.jpeg

    - name: "Set Avatars in LDAP"
      shell:
        cmd: |
          echo {{ ipaadmin_password }} | kinit admin
          "ldapmodify <<<$'dn: uid={{ item }},cn=users,cn=accounts,dc=linux,dc=lab\nchangetype: modify\nadd: jpegPhoto\njpegPhoto:< file:///tmp/{{ item }}.jpeg\n'"
          kdestroy
      with_items:
        - rossi
        - mustermann
        - doe
      register: avatar_in_ldap
      changed_when: avatar_in_ldap.rc == 0
      failed_when: avatar_in_ldap.rc != 0 and avatar_in_ldap.rc != 20

    - name: "Create groups"
      ipagroup:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ item.name }}"
        description: "{{ item.description }}"
      with_items:
        - { name: vpn-users, description: "VPN Users" }

    - name: "Add users to groups"
      ipagroup:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ item.key }}"
        action: member
        user: "{{ item.value }}"
      with_dict:
        vpn-users:
          - rossi
          - mustermann
          - doe

    - name: "Create autofs map auto.data"
      ipaautomountmap:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: auto.data
        location: default

    - name: "Add key auto.data to map auto.master"
      ipaautomountkey:
        ipaadmin_password: "{{ ipaadmin_password }}"
        location: default
        mapname: auto.master
        key: "/data"
        info: auto.data

    - name: "Add DNS zone test.lab"
      ipadnszone:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: test.lab
        allow_sync_ptr: yes
        dynamic_update: true
      environment:
        LANG: "en_US@UTF-8"
        LANGUAGE: "en_US@UTF-8"
        LC_ALL: "C.UTF-8"

    - name: "Add DNS entries"
      ipadnsrecord:
        ipaadmin_password: "{{ ipaadmin_password }}"
        zone_name: test.lab
        name: "{{ item.name }}"
        record_type: "{{ item.type }}"
        record_value: "{{ item.value }}"
      loop:
        - { name: autoconfig, type: CNAME, value: mail.linux.lab. }
        - { name: gw, type: A, value: "192.168.120.254" }

    - name: "Create trust to AD"
      ipatrust:
        realm: WINDOWS.LAB
        state: present
        admin: Administrator
        password: "{{ dc.admin_password }}"
        server: dc01.windows.lab
        two_way: true
        ipaadmin_password: "{{ ipaadmin_password }}"
      environment:
        LANG: "en_US@UTF-8"
        LANGUAGE: "en_US@UTF-8"
        LC_ALL: "C.UTF-8"

    - name: Configure sssd
      ini_file:
        path: /etc/sssd/sssd.conf
        section: nss
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      loop: "{{ sssd_params | dict2items }}"
      vars:
        sssd_params:
            default_shell: "/bin/bash"
            case_sensitive: "False"

    - name: Write current time into RTC
      command: hwclock --utc --systohc
